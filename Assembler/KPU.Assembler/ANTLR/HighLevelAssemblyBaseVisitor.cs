//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Github\KPU\Assembler\KPU.Assembler\ANTLR\HighLevelAssembly.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IHighLevelAssemblyVisitor{Result}"/>,
/// which can be extended to create a visitor which only needs to handle a subset
/// of the available methods.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class HighLevelAssemblyBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, IHighLevelAssemblyVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.program"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitProgram([NotNull] HighLevelAssemblyParser.ProgramContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_R8_R8([NotNull] HighLevelAssemblyParser.MOV_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_I_R8_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_I_R8_R16([NotNull] HighLevelAssemblyParser.MOV_I_R8_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPO_R8_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPO_R8_R16([NotNull] HighLevelAssemblyParser.MOV_IPO_R8_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPRO_R8_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPRO_R8_R16([NotNull] HighLevelAssemblyParser.MOV_IPRO_R8_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INO_R8_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INO_R8_R16([NotNull] HighLevelAssemblyParser.MOV_INO_R8_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INRO_R8_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INRO_R8_R16([NotNull] HighLevelAssemblyParser.MOV_INRO_R8_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.MOV_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_CONST_BINARY([NotNull] HighLevelAssemblyParser.MOV_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_CONST_HEX1([NotNull] HighLevelAssemblyParser.MOV_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_CONST_HEX2([NotNull] HighLevelAssemblyParser.MOV_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPO_R16_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPO_R16_R8([NotNull] HighLevelAssemblyParser.MOV_IPO_R16_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPO_R16_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPO_R16_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.MOV_IPO_R16_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPO_R16_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPO_R16_CONST_BINARY([NotNull] HighLevelAssemblyParser.MOV_IPO_R16_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPO_R16_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPO_R16_CONST_HEX1([NotNull] HighLevelAssemblyParser.MOV_IPO_R16_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPO_R16_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPO_R16_CONST_HEX2([NotNull] HighLevelAssemblyParser.MOV_IPO_R16_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPRO_R16_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPRO_R16_R8([NotNull] HighLevelAssemblyParser.MOV_IPRO_R16_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPRO_R16_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPRO_R16_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.MOV_IPRO_R16_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPRO_R16_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPRO_R16_CONST_BINARY([NotNull] HighLevelAssemblyParser.MOV_IPRO_R16_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPRO_R16_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPRO_R16_CONST_HEX1([NotNull] HighLevelAssemblyParser.MOV_IPRO_R16_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_IPRO_R16_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_IPRO_R16_CONST_HEX2([NotNull] HighLevelAssemblyParser.MOV_IPRO_R16_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INO_R16_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INO_R16_R8([NotNull] HighLevelAssemblyParser.MOV_INO_R16_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INO_R16_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INO_R16_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.MOV_INO_R16_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INO_R16_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INO_R16_CONST_BINARY([NotNull] HighLevelAssemblyParser.MOV_INO_R16_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INO_R16_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INO_R16_CONST_HEX1([NotNull] HighLevelAssemblyParser.MOV_INO_R16_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INO_R16_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INO_R16_CONST_HEX2([NotNull] HighLevelAssemblyParser.MOV_INO_R16_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INRO_R16_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INRO_R16_R8([NotNull] HighLevelAssemblyParser.MOV_INRO_R16_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INRO_R16_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INRO_R16_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.MOV_INRO_R16_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INRO_R16_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INRO_R16_CONST_BINARY([NotNull] HighLevelAssemblyParser.MOV_INRO_R16_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INRO_R16_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INRO_R16_CONST_HEX1([NotNull] HighLevelAssemblyParser.MOV_INRO_R16_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_INRO_R16_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_INRO_R16_CONST_HEX2([NotNull] HighLevelAssemblyParser.MOV_INRO_R16_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_I_R16_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_I_R16_R8([NotNull] HighLevelAssemblyParser.MOV_I_R16_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_I_R16_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_I_R16_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.MOV_I_R16_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_I_R16_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_I_R16_CONST_BINARY([NotNull] HighLevelAssemblyParser.MOV_I_R16_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_I_R16_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_I_R16_CONST_HEX1([NotNull] HighLevelAssemblyParser.MOV_I_R16_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV_I_R16_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV_I_R16_CONST_HEX2([NotNull] HighLevelAssemblyParser.MOV_I_R16_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.MOV16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMOV16([NotNull] HighLevelAssemblyParser.MOV16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.ADD_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitADD_R8_R8([NotNull] HighLevelAssemblyParser.ADD_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.ADD_R16_CONST"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitADD_R16_CONST([NotNull] HighLevelAssemblyParser.ADD_R16_CONSTContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.ADC_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitADC_R8_R8([NotNull] HighLevelAssemblyParser.ADC_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.AND_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitAND_R8_R8([NotNull] HighLevelAssemblyParser.AND_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.OR_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitOR_R8_R8([NotNull] HighLevelAssemblyParser.OR_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.XOR_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitXOR_R8_R8([NotNull] HighLevelAssemblyParser.XOR_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.SHL_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSHL_R8([NotNull] HighLevelAssemblyParser.SHL_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.SHR_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSHR_R8([NotNull] HighLevelAssemblyParser.SHR_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.SAR_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSAR_R8([NotNull] HighLevelAssemblyParser.SAR_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.RCL_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRCL_R8([NotNull] HighLevelAssemblyParser.RCL_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.RCR_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRCR_R8([NotNull] HighLevelAssemblyParser.RCR_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.NOT_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNOT_R8([NotNull] HighLevelAssemblyParser.NOT_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.NEG_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNEG_R8([NotNull] HighLevelAssemblyParser.NEG_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.INC_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitINC_R8([NotNull] HighLevelAssemblyParser.INC_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.DEC_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDEC_R8([NotNull] HighLevelAssemblyParser.DEC_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.SUB_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSUB_R8_R8([NotNull] HighLevelAssemblyParser.SUB_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.SUB_R16_CONST"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSUB_R16_CONST([NotNull] HighLevelAssemblyParser.SUB_R16_CONSTContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.SBB_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitSBB_R8_R8([NotNull] HighLevelAssemblyParser.SBB_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.CMP_R8_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCMP_R8_R8([NotNull] HighLevelAssemblyParser.CMP_R8_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSH_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSH_R8([NotNull] HighLevelAssemblyParser.PUSH_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSH_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSH_R16([NotNull] HighLevelAssemblyParser.PUSH_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSH_CONST_BINARY"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSH_CONST_BINARY([NotNull] HighLevelAssemblyParser.PUSH_CONST_BINARYContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSH_CONST_DECIMAL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSH_CONST_DECIMAL([NotNull] HighLevelAssemblyParser.PUSH_CONST_DECIMALContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSH_CONST_HEX1"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSH_CONST_HEX1([NotNull] HighLevelAssemblyParser.PUSH_CONST_HEX1Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSH_CONST_HEX2"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSH_CONST_HEX2([NotNull] HighLevelAssemblyParser.PUSH_CONST_HEX2Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.POP_R8"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPOP_R8([NotNull] HighLevelAssemblyParser.POP_R8Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.POP_R16"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPOP_R16([NotNull] HighLevelAssemblyParser.POP_R16Context context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.PUSHF"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPUSHF([NotNull] HighLevelAssemblyParser.PUSHFContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.POPF"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPOPF([NotNull] HighLevelAssemblyParser.POPFContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.ENTER"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitENTER([NotNull] HighLevelAssemblyParser.ENTERContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.LEAVE"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitLEAVE([NotNull] HighLevelAssemblyParser.LEAVEContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.JMP_LABEL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitJMP_LABEL([NotNull] HighLevelAssemblyParser.JMP_LABELContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.JMP"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitJMP([NotNull] HighLevelAssemblyParser.JMPContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.JZ"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitJZ([NotNull] HighLevelAssemblyParser.JZContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.JNZ"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitJNZ([NotNull] HighLevelAssemblyParser.JNZContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.JNS"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitJNS([NotNull] HighLevelAssemblyParser.JNSContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.JNC"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitJNC([NotNull] HighLevelAssemblyParser.JNCContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.CALL"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitCALL([NotNull] HighLevelAssemblyParser.CALLContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.RET"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRET([NotNull] HighLevelAssemblyParser.RETContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.IN"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitIN([NotNull] HighLevelAssemblyParser.INContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.OUT"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitOUT([NotNull] HighLevelAssemblyParser.OUTContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.OUTB"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitOUTB([NotNull] HighLevelAssemblyParser.OUTBContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.NOP"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitNOP([NotNull] HighLevelAssemblyParser.NOPContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.HLT"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitHLT([NotNull] HighLevelAssemblyParser.HLTContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.DATA"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitDATA([NotNull] HighLevelAssemblyParser.DATAContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.register_8bit"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRegister_8bit([NotNull] HighLevelAssemblyParser.Register_8bitContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.register_16bit"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitRegister_16bit([NotNull] HighLevelAssemblyParser.Register_16bitContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.port_8bit"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPort_8bit([NotNull] HighLevelAssemblyParser.Port_8bitContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.out_port_8bit"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitOut_port_8bit([NotNull] HighLevelAssemblyParser.Out_port_8bitContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.plus_sign"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPlus_sign([NotNull] HighLevelAssemblyParser.Plus_signContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.minus_sign"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMinus_sign([NotNull] HighLevelAssemblyParser.Minus_signContext context) { return VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="HighLevelAssemblyParser.@int"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitInt([NotNull] HighLevelAssemblyParser.IntContext context) { return VisitChildren(context); }
}
